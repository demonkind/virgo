<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd">


    <import resource="classpath*:virgo-db.xml"/>
    <import resource="classpath*:virgo-mybatis.xml"/>
    <import resource="classpath*:applicationContext-biz.xml"/>

    <bean id="acitvemqPCF" class="org.apache.activemq.pool.PooledConnectionFactory"
          destroy-method="stop">
        <property name="connectionFactory">
            <bean class="org.apache.activemq.ActiveMQConnectionFactory">
                <property name="brokerURL">
                    <value>failover:(tcp://172.16.103.180:61616)?initialReconnectDelay=1000&amp;startupMaxReconnectAttempts=500&amp;timeout=2000&amp;jms.prefetchPolicy.queuePrefetch=1</value>
                </property>
                <property name="nonBlockingRedelivery" value="true"/>
                <property name="sendTimeout" value="3000"/>
                <property name="alwaysSyncSend" value="true"/>
                <property name="redeliveryPolicy.useExponentialBackOff"
                          value="true"/>
                <property name="redeliveryPolicy.backOffMultiplier" value="2"/>
                <!--
                                    重试因子，重试规律为：6s 12s 24s 48s 96s 180s -->
                <property name="redeliveryPolicy.initialRedeliveryDelay"
                          value="0"/>
                <property name="redeliveryPolicy.redeliveryDelay" value="3000"/>
                <!--
                                    6秒 -->
                <property name="redeliveryPolicy.maximumRedeliveries"
                          value="5"/>
                <!-- 6次 -->
                <property name="redeliveryPolicy.maximumRedeliveryDelay"
                          value="180000"/>
                <!-- 最大3分钟间隔重试 -->
            </bean>
        </property>
        <property name="expiryTimeout" value="1000000"/>
        <property name="maxConnections" value="250"/>
    </bean>


    <bean id="receiveActiveMQ" class="org.apache.activemq.pool.PooledConnectionFactory"
          destroy-method="stop">
        <property name="connectionFactory">
            <bean class="org.apache.activemq.ActiveMQConnectionFactory">
                <property name="brokerURL">
                    <value>failover:(tcp://172.16.103.180:61616)?initialReconnectDelay=1000&amp;startupMaxReconnectAttempts=500&amp;timeout=2000&amp;jms.prefetchPolicy.queuePrefetch=1</value>
                </property>
                <property name="nonBlockingRedelivery" value="true"/>
                <property name="sendTimeout" value="3000"/>
                <property name="alwaysSyncSend" value="true"/>
                <property name="redeliveryPolicy.useExponentialBackOff"
                          value="true"/>
                <property name="redeliveryPolicy.backOffMultiplier" value="1"/>
                <!--
                                    重试因子，重试规律为：6s 12s 24s 48s 96s 180s -->
                <property name="redeliveryPolicy.initialRedeliveryDelay"
                          value="0"/>
                <property name="redeliveryPolicy.redeliveryDelay" value="1000"/>
                <!--
                                    6秒 -->
                <property name="redeliveryPolicy.maximumRedeliveries"
                          value="1"/>
                <!-- 6次 -->
                <property name="redeliveryPolicy.maximumRedeliveryDelay"
                          value="180000"/>
                <!-- 最大3分钟间隔重试 -->
            </bean>
        </property>
        <property name="expiryTimeout" value="1000000"/>
        <property name="maxConnections" value="5"/>
    </bean>

    <bean id="connectionFactoryDispatcher" class="org.apache.activemq.pool.PooledConnectionFactory"
          destroy-method="stop">
        <property name="connectionFactory">
            <bean class="org.apache.activemq.ActiveMQConnectionFactory">
                <property name="brokerURL">
                    <value>failover:(tcp://172.16.103.180:61616)?initialReconnectDelay=1000&amp;startupMaxReconnectAttempts=500&amp;timeout=2000&amp;jms.prefetchPolicy.queuePrefetch=1</value>
                </property>
                <property name="nonBlockingRedelivery" value="true"/>
                <property name="sendTimeout" value="3000"/>
                <property name="alwaysSyncSend" value="true"/>
                <property name="redeliveryPolicy.useExponentialBackOff"
                          value="true"/>
                <property name="redeliveryPolicy.backOffMultiplier" value="1"/>
                <!--
                                    重试因子，重试规律为：6s 12s 24s 48s 96s 180s -->
                <property name="redeliveryPolicy.initialRedeliveryDelay"
                          value="0"/>
                <property name="redeliveryPolicy.redeliveryDelay" value="1000"/>
                <!--
                                    6秒 -->
                <property name="redeliveryPolicy.maximumRedeliveries"
                          value="1"/>
                <!-- 6次 -->
                <property name="redeliveryPolicy.maximumRedeliveryDelay"
                          value="180000"/>
                <!-- 最大3分钟间隔重试 -->
            </bean>
        </property>
        <property name="expiryTimeout" value="1000000"/>
        <property name="maxConnections" value="250"/>
    </bean>

    <!--<bean id="connectionFactoryDLQ" class="org.apache.activemq.pool.PooledConnectionFactory"-->
          <!--destroy-method="stop">-->
        <!--<property name="connectionFactory">-->
            <!--<bean class="org.apache.activemq.ActiveMQConnectionFactory">-->
                <!--<property name="brokerURL">-->
                    <!--<value>failover:(${message.broker.addr.virgo})?initialReconnectDelay=1000&amp;startupMaxReconnectAttempts=500&amp;timeout=2000&amp;jms.prefetchPolicy.queuePrefetch=1</value>-->
                <!--</property>-->
                <!--<property name="nonBlockingRedelivery" value="true"/>-->
                <!--<property name="sendTimeout" value="3000"/>-->
                <!--<property name="alwaysSyncSend" value="true"/>-->
                <!--<property name="redeliveryPolicy.useExponentialBackOff"-->
                          <!--value="true"/>-->
                <!--<property name="redeliveryPolicy.backOffMultiplier" value="1"/>-->
                <!--&lt;!&ndash;-->
                                    <!--重试因子，重试规律为：6s 12s 24s 48s 96s 180s &ndash;&gt;-->
                <!--<property name="redeliveryPolicy.initialRedeliveryDelay"-->
                          <!--value="0"/>-->
                <!--<property name="redeliveryPolicy.redeliveryDelay" value="1000"/>-->
                <!--&lt;!&ndash;-->
                                    <!--6秒 &ndash;&gt;-->
                <!--<property name="redeliveryPolicy.maximumRedeliveries"-->
                          <!--value="1"/>-->
                <!--&lt;!&ndash; 6次 &ndash;&gt;-->
                <!--<property name="redeliveryPolicy.maximumRedeliveryDelay"-->
                          <!--value="180000"/>-->
                <!--&lt;!&ndash; 最大3分钟间隔重试 &ndash;&gt;-->
            <!--</bean>-->
        <!--</property>-->
        <!--<property name="expiryTimeout" value="1000000"/>-->
        <!--<property name="maxConnections" value="5"/>-->
    <!--</bean>-->

    <bean id="connectionFactorySender" class="org.apache.activemq.pool.PooledConnectionFactory"
          destroy-method="stop">
        <property name="connectionFactory">
            <bean class="org.apache.activemq.ActiveMQConnectionFactory">
                <property name="brokerURL">
                    <value>failover:(tcp://172.16.103.180:61616)?initialReconnectDelay=1000&amp;startupMaxReconnectAttempts=500&amp;timeout=2000&amp;jms.prefetchPolicy.queuePrefetch=0</value>
                </property>
                <property name="nonBlockingRedelivery" value="true" />
                <property name="sendTimeout" value="3000" />
                <property name="alwaysSyncSend" value="true" />
                <property name="redeliveryPolicy.useExponentialBackOff"
                          value="true" />
                <property name="redeliveryPolicy.backOffMultiplier" value="2" /><!--
					重试因子，重试规律为：6s 12s 24s 48s 96s 180s -->
                <property name="redeliveryPolicy.initialRedeliveryDelay"
                          value="0" />
                <property name="redeliveryPolicy.redeliveryDelay" value="3000" /><!--
					6秒 -->
                <property name="redeliveryPolicy.maximumRedeliveries"
                          value="5" /><!-- 6次 -->
                <property name="redeliveryPolicy.maximumRedeliveryDelay"
                          value="180000" /><!-- 最大3分钟间隔重试 -->
            </bean>
        </property>
        <property name="expiryTimeout" value="1000000" />
        <property name="maxConnections" value="30"/>
    </bean>

    <!-- Spring JMS Template -->
    <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory">
            <ref bean="connectionFactoryDispatcher" />
        </property>
    </bean>

    <!-- bean for send message -->
    <bean id="messageSender" class="com.huifu.virgo.common.sender.MessageSenderImpl">
        <property name="jmsTemplate" ref="jmsTemplate"></property>
    </bean>

    <!--<bean id="transactionManager"-->
          <!--class="org.springframework.jms.connection.JmsTransactionManager">-->
        <!--<property name="connectionFactory" ref="connectionFactoryDLQ"/>-->
    <!--</bean>-->

    <!--<bean id="dlqWaitingConsumer"-->
          <!--class="org.springframework.jms.listener.DefaultMessageListenerContainer">-->
        <!--<property name="connectionFactory" ref="connectionFactoryDLQ"/>-->
        <!--<property name="destinationName" value="ActiveMQ.DLQ"/>-->
        <!--<property name="messageListener">-->
            <!--<bean class="com.huifu.virgo.worker.DlqWaitingListener"/>-->
        <!--</property>-->
        <!--<property name="cacheLevelName" value="CACHE_CONSUMER"/>-->
        <!--<property name="sessionTransacted" value="true"/>-->
        <!--<property name="transactionManager" ref="transactionManager"/>-->
        <!--<property name="concurrentConsumers" value="1"/>-->
    <!--</bean>-->

</beans>
